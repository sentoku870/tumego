:root {
  /* 色設定 */
  --bg: #f7f7f7;
  --board: #f1d49c;
  --line: #000;
  --star: #000;
  --coord: #333;
  --accent: #0066cc;
  --black: #000;
  --white: #fff;
}
*{box-sizing:border-box;}

body {
  margin: 0;
  font-family: system-ui, sans-serif;
  background: var(--bg);
  /* 既存のpaddingをSafeArea対応版に置き換える */
  padding: calc(16px + env(safe-area-inset-top)) 
           calc(8px + env(safe-area-inset-right)) 
           calc(16px + env(safe-area-inset-bottom)) 
           calc(8px + env(safe-area-inset-left));
  min-height: 100vh;
  /* iOS Safariのアドレスバーなどを考慮し、表示領域の高さを最大化する */
  min-height: -webkit-fill-available;
}

#layout{
  display:flex;
  flex-direction:column;
  align-items:center;
  gap:12px;
}

body.horizontal #layout{
  flex-direction:row;
  align-items:flex-start;
  gap:16px;
}

#ui{display:contents;}

#ui{display:contents;}

body.horizontal #ui{
  display:flex;
  flex-direction:column;
  gap:12px;
  /* ▼▼▼ 修正箇所 ▼▼▼ */
  flex: 1; /* 碁盤以外の残りスペースをすべてUIエリアとして使用する */
  min-width: 220px; /* UIエリアが狭くなりすぎないように最小幅を確保 */
  max-height: 95vh; /* 碁盤の最大高さとUIエリアの高さを合わせる */
  overflow-y: auto; /* 内容が多い場合はUIエリア内を縦スクロール可能にする */
}

body.horizontal .moves{display:none;}

#controls{order:1;}
.info{order:2;}
#branch-info{order:3;}
#move-slider{order:4;}
#board-wrapper{order:5;}
.moves{order:6;}
#sgf-controls{order:7;}
#sgf-text{order:8;}
.msg{order:9;}
body.horizontal #board-wrapper{order:1;}
body.horizontal #ui{order:2;}

/* board width synced elements */
body:not(.horizontal) #controls,
body:not(.horizontal) .info,
body:not(.horizontal) #branch-info,
body:not(.horizontal) #move-slider,
body:not(.horizontal) .moves,
body:not(.horizontal) #sgf-controls,
body:not(.horizontal) #sgf-text,
body:not(.horizontal) .msg{
  width:var(--board-width);
  max-width:var(--board-width);
}

#sgf-text{margin-top:-4px;}

/* ===== 操作ボタン 3×3 グリッド ===== */
#controls{
  display:grid;
  grid-template-columns:repeat(3,1fr);
  gap:8px;
  width:100%;
  max-width:480px;
  grid-auto-rows:minmax(48px,auto);
}
/* SGF 操作用ボタン群 */
#sgf-controls{
  display:grid;
  grid-template-columns:repeat(auto-fit,minmax(80px,1fr));
  gap:8px;
  width:100%;
  max-width:480px;
  grid-auto-rows:minmax(48px,auto);
}
#sgf-input{display:none;}
#sgf-text{width:100%;max-width:480px;padding:4px;}
.ctrl-btn{
  display:flex;
  justify-content:center;
  align-items:center;
  padding:0 4px;
  border:2px solid var(--accent);
  border-radius:8px;
  background:#fff;
  color:var(--accent);
  font-weight:600;
  font-size:15px;
  cursor:pointer;
  user-select:none;
  transition:background .15s ease,color .15s ease;
}
.ctrl-btn:hover{background:var(--accent);color:#fff;}
.ctrl-btn.active{background:var(--accent);color:#fff;}
/* プレイモードボタンも他のボタンと同じサイズに */
.play-btn{
  padding-block:0;
  font-size:15px;
}
@media(max-width:480px){.ctrl-btn{font-size:14px;}}

/* ▼▼▼ 追加したスタイル ▼▼▼ */

/* 横レイアウト時のUI要素の幅を親要素(UIエリア)に合わせる */
body.horizontal #move-slider,
body.horizontal #sgf-text {
  width: 100%;
}

/* 横レイアウト時、UIエリアの幅に応じてボタンの列数を自動調整する */
body.horizontal #controls,
body.horizontal #sgf-controls {
  grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
}

/* タッチデバイス向けのスタイル調整 */
@media (hover: none) and (pointer: coarse) {
  #controls,
  #sgf-controls {
    /* 少し高さを大きくしてタップしやすくする */
    grid-auto-rows: minmax(52px, auto);
  }
}